/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.CheerAgencyRole;


import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.WorldCupFansOrganization;
import Business.Organization.CheerAgencyOrganization;
import Business.Organization.Organization;
import Business.Organization.BarAssignOrganization;


import Business.UserAccount.UserAccount;
import Business.WorkQueue.Game;
import Business.WorkQueue.DecorationItem;
import Business.WorkQueue.Bar;
import Business.WorkQueue.Status;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkSend;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import java.awt.Component;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class CheerWorkJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private CheerAgencyOrganization decorationOrganization;
    private BarAssignOrganization stadiumAssignOrganization;
    private WorldCupFansOrganization concertOrganization;
    private Enterprise enterprise;
    private EcoSystem business;

    public CheerWorkJPanel(
            JPanel userProcessContainer,
            UserAccount userAccount, 
            CheerAgencyOrganization decorationOrganization, 
            Enterprise enterprise, 
            EcoSystem business) {
        initComponents();
        this.setSize(850, 800);
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.decorationOrganization = decorationOrganization;
        this.business = business;
        this.enterprise = enterprise;
        
        //get Bar Assign Organization
        for(Network network : business.getNetworkList()){
            for(Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization o:e.getOrganizationDirectory().getOrganizationList()){
                    if(o instanceof BarAssignOrganization){
                        this.stadiumAssignOrganization = (BarAssignOrganization) o;
                    }
                }
            }      
        }
        
        //get concert Organization
        for(Network network : business.getNetworkList()){
            for(Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization o:e.getOrganizationDirectory().getOrganizationList()){
                    if(o instanceof WorldCupFansOrganization){
                        this.concertOrganization = (WorldCupFansOrganization) o;
                    }
                }
            }      
        }
        
        populateDecorationOrderJTable();
        populateDecorationItemJTable();
    }
    
    public void populateDecorationOrderJTable() {
        DefaultTableModel model = (DefaultTableModel) decorationOrderJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest wr : stadiumAssignOrganization.getWorkQueue().getWorkRequestList()) {
            if(wr instanceof WorkSend){
                WorkSend ws = (WorkSend) wr;
                Object[] row = new Object[4];
                row[0] = ws;
                row[1] = ws.getChooseDecorationList();
                row[2] = ws.getStatus();
                model.addRow(row); 
            }
        }
    }
    
    public void populateDecorationItemJTable() {
        DefaultTableModel model = (DefaultTableModel) decorationItemJTable.getModel();
        model.setRowCount(0);
        for (DecorationItem d : stadiumAssignOrganization.getWorkQueue().getDecorationItemList()) {
                Object[] row = new Object[2];
                row[0] = d;
                row[1] = d.getDecorationItemPrice();
                model.addRow(row); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        decorationItemJTable = new javax.swing.JTable();
        btnAcceptBookStadium = new javax.swing.JButton();
        btnRefuseBookStadium = new javax.swing.JButton();
        btnModifyItem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        decorationOrderJTable = new javax.swing.JTable();
        btnAddItem1 = new javax.swing.JButton();
        btnDeleteItem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 36)); // NOI18N
        jLabel1.setText("Cheer stuff Part");
        add(jLabel1);
        jLabel1.setBounds(6, 6, 321, 43);
        add(jSeparator1);
        jSeparator1.setBounds(0, 55, 850, 11);

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        jLabel2.setText("Manage Game Order");
        add(jLabel2);
        jLabel2.setBounds(272, 84, 253, 30);

        decorationItemJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Cheer Stuff"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(decorationItemJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(67, 419, 454, 155);

        btnAcceptBookStadium.setBackground(new java.awt.Color(255, 255, 255));
        btnAcceptBookStadium.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnAcceptBookStadium.setText("Accept");
        btnAcceptBookStadium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptBookStadiumActionPerformed(evt);
            }
        });
        add(btnAcceptBookStadium);
        btnAcceptBookStadium.setBounds(67, 314, 91, 29);

        btnRefuseBookStadium.setBackground(new java.awt.Color(255, 255, 255));
        btnRefuseBookStadium.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnRefuseBookStadium.setText("Refuse");
        btnRefuseBookStadium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefuseBookStadiumActionPerformed(evt);
            }
        });
        add(btnRefuseBookStadium);
        btnRefuseBookStadium.setBounds(176, 314, 93, 29);

        btnModifyItem.setBackground(new java.awt.Color(255, 255, 255));
        btnModifyItem.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnModifyItem.setText("Modify Item");
        btnModifyItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyItemActionPerformed(evt);
            }
        });
        add(btnModifyItem);
        btnModifyItem.setBounds(200, 586, 132, 29);

        decorationOrderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Game", "Cheer Stuff", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(decorationOrderJTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(67, 141, 691, 155);

        btnAddItem1.setBackground(new java.awt.Color(255, 255, 255));
        btnAddItem1.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnAddItem1.setText("Add  Item");
        btnAddItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItem1ActionPerformed(evt);
            }
        });
        add(btnAddItem1);
        btnAddItem1.setBounds(67, 586, 115, 29);

        btnDeleteItem.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteItem.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnDeleteItem.setText("Delete Item");
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });
        add(btnDeleteItem);
        btnDeleteItem.setBounds(350, 586, 128, 29);

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel3.setText("Manage Cheer stuff");
        add(jLabel3);
        jLabel3.setBounds(67, 385, 210, 22);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Champagne-Celebration.jpeg"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4);
        jLabel4.setBounds(0, 0, 1300, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptBookStadiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptBookStadiumActionPerformed
        // TODO add your handling code here:
        //select a row
        int selectedRowIndex = decorationOrderJTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkSend workSend = (WorkSend) decorationOrderJTable.getValueAt(selectedRowIndex, 0);
        
        
        workSend.setStatus(Status.CheerAccept);
        for(WorkRequest wr : concertOrganization.getWorkQueue().getWorkRequestList()){
            if(wr instanceof WorkSend){
                WorkSend ws = (WorkSend) wr;
                if(ws.getConcert().getConcertName().equals(workSend.getConcert().getConcertName())){
                    ws.setStatus(Status.CheerAccept);
                }
            }
        }
        JOptionPane.showMessageDialog(this, "Cheer stuff has accept the request!", "Information", JOptionPane.DEFAULT_OPTION);

        populateDecorationOrderJTable();
        DB4OUtil.getInstance().storeSystem(business);
    }//GEN-LAST:event_btnAcceptBookStadiumActionPerformed

    private void btnRefuseBookStadiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefuseBookStadiumActionPerformed
        // TODO add your handling code here:
        //select a row
        int selectedRowIndex = decorationOrderJTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkSend workSend = (WorkSend) decorationOrderJTable.getValueAt(selectedRowIndex, 0);
        
        
        workSend.setStatus(Status.CheerRefuse);
        for(WorkRequest wr : concertOrganization.getWorkQueue().getWorkRequestList()){
            if(wr instanceof WorkSend){
                WorkSend ws = (WorkSend) wr;
                if(ws.getConcert().getConcertName().equals(workSend.getConcert().getConcertName())){
                    ws.setStatus(Status.CheerRefuse);
                }
            }
        }
        JOptionPane.showMessageDialog(this, "Cheer stuff has refuse the request!", "Information", JOptionPane.DEFAULT_OPTION);

        populateDecorationOrderJTable();
        DB4OUtil.getInstance().storeSystem(business);
    }//GEN-LAST:event_btnRefuseBookStadiumActionPerformed

    private void btnModifyItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyItemActionPerformed
        // TODO add your handling code here:
        //select a row
        int selectedRowIndex = decorationItemJTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        DecorationItem decorationItem = (DecorationItem) decorationItemJTable.getValueAt(selectedRowIndex, 0);
        
        ModifyCheerStuffJPanel mdijp = new ModifyCheerStuffJPanel(
            userProcessContainer,
            userAccount,
            concertOrganization,
            decorationItem,
            enterprise,
            business);
        userProcessContainer.add("ModifyDecorationItemJPanel", mdijp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnModifyItemActionPerformed

    private void btnAddItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItem1ActionPerformed
        // TODO add your handling code here:
        AddNewCheerStuffJPanel andijp = new AddNewCheerStuffJPanel(
            userProcessContainer,
            userAccount,
            stadiumAssignOrganization,
            concertOrganization,
            enterprise,
            business);
        userProcessContainer.add("AddNewDecorationItemJPanel", andijp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddItem1ActionPerformed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        // TODO add your handling code here:
        //select a row
        int selectedRowIndex = decorationItemJTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        DecorationItem decorationItem = (DecorationItem) decorationItemJTable.getValueAt(selectedRowIndex, 0);
        
        stadiumAssignOrganization.getWorkQueue().getDecorationItemList().remove(decorationItem);
        concertOrganization.getWorkQueue().getDecorationItemList().remove(decorationItem);
        JOptionPane.showMessageDialog(this, "Cheer stufff has been deleted successfully!", "Information", JOptionPane.DEFAULT_OPTION);
        
        populateDecorationItemJTable();
        DB4OUtil.getInstance().storeSystem(business);
    }//GEN-LAST:event_btnDeleteItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptBookStadium;
    private javax.swing.JButton btnAddItem1;
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnModifyItem;
    private javax.swing.JButton btnRefuseBookStadium;
    private javax.swing.JTable decorationItemJTable;
    private javax.swing.JTable decorationOrderJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}

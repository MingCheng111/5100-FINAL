/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.BarAssignRole;


import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;

import Business.Organization.WorldCupFansOrganization;
import Business.Organization.CheerAgencyOrganization;
import Business.Organization.Organization;
import Business.Organization.BarAssignOrganization;


import Business.UserAccount.UserAccount;
import Business.WorkQueue.Game;
import Business.WorkQueue.Bar;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkSend;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import java.awt.Component;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jinlang
 */
public class ManageBarJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private BarAssignOrganization stadiumAssignOrganization;
    private WorldCupFansOrganization  concertOrganization;
    private Enterprise enterprise;
    private EcoSystem business;

    public ManageBarJPanel(
            JPanel userProcessContainer,
            UserAccount userAccount, 
            BarAssignOrganization stadiumAssignOrganization,
            WorldCupFansOrganization concertOrganization, 
            Enterprise enterprise, 
            EcoSystem business) {
        initComponents();
        this.setSize(850, 800);
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.stadiumAssignOrganization = stadiumAssignOrganization;
        this.concertOrganization = concertOrganization;
        this.business = business;
        this.enterprise = enterprise;
        
        populateStadiumJTable();
    }
    
    public void populateStadiumJTable() {
        DefaultTableModel model = (DefaultTableModel) stadiumJTable.getModel();
        model.setRowCount(0);
        for (Bar s : stadiumAssignOrganization.getWorkQueue().getStadiumList()) {
            Object[] row = new Object[5];
            row[0] = s;
            row[1] = s.getStadiumCity();
            row[2] = s.getStadiumAddress();
            row[3] = s.getStadiumSeat();
            row[4] = s.getStadiumPrice();
            model.addRow(row); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stadiumJTable = new javax.swing.JTable();
        btnModifyStadium = new javax.swing.JButton();
        btnDeleteStadium1 = new javax.swing.JButton();
        btnAddStadium = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 36)); // NOI18N
        jLabel1.setText("Bar Assign Part");
        add(jLabel1);
        jLabel1.setBounds(6, 6, 321, 43);
        add(jSeparator1);
        jSeparator1.setBounds(0, 55, 850, 11);

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Manage Bar");
        add(jLabel2);
        jLabel2.setBounds(298, 182, 144, 30);

        stadiumJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bar", "City", "Address", "Available Seats"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(stadiumJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(51, 266, 691, 156);

        btnModifyStadium.setBackground(new java.awt.Color(255, 255, 255));
        btnModifyStadium.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnModifyStadium.setText("Modify");
        btnModifyStadium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyStadiumActionPerformed(evt);
            }
        });
        add(btnModifyStadium);
        btnModifyStadium.setBounds(316, 468, 94, 29);

        btnDeleteStadium1.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteStadium1.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnDeleteStadium1.setText("Delete");
        btnDeleteStadium1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteStadium1ActionPerformed(evt);
            }
        });
        add(btnDeleteStadium1);
        btnDeleteStadium1.setBounds(630, 468, 90, 29);

        btnAddStadium.setBackground(new java.awt.Color(255, 255, 255));
        btnAddStadium.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnAddStadium.setText("Add");
        btnAddStadium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStadiumActionPerformed(evt);
            }
        });
        add(btnAddStadium);
        btnAddStadium.setBounds(80, 468, 65, 29);

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(0, 72, 77, 29);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/bar1.jpeg"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setSize(new java.awt.Dimension(1300, 1000));
        add(jLabel3);
        jLabel3.setBounds(-5, -4, 1300, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void btnModifyStadiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyStadiumActionPerformed

        //select a row
        int selectedRowIndex = stadiumJTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Bar stadium = (Bar) stadiumJTable.getValueAt(selectedRowIndex, 0);

        ModifyBarJPanel msjp = new ModifyBarJPanel(
            userProcessContainer,
            userAccount,
            stadiumAssignOrganization,
            concertOrganization,
            stadium,
            enterprise,
            business);
        userProcessContainer.add("ModifyStadiumJPanel", msjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnModifyStadiumActionPerformed

    private void btnDeleteStadium1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteStadium1ActionPerformed
         // TODO add your handling code here:
        //select a row
        int selectedRowIndex = stadiumJTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Bar stadium = (Bar) stadiumJTable.getValueAt(selectedRowIndex, 0);

        stadiumAssignOrganization.getWorkQueue().getStadiumList().remove(stadium);
        concertOrganization.getWorkQueue().getStadiumList().remove(stadium);
        JOptionPane.showMessageDialog(this, "Bar has been deleted successfully!", "Information", JOptionPane.DEFAULT_OPTION);
        
        populateStadiumJTable();
        DB4OUtil.getInstance().storeSystem(business);
    }//GEN-LAST:event_btnDeleteStadium1ActionPerformed

    private void btnAddStadiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStadiumActionPerformed
        // TODO add your handling code here:
        AddNewBarJPanel ansjp = new AddNewBarJPanel(
            userProcessContainer,
            userAccount,
            stadiumAssignOrganization,
            concertOrganization,
            enterprise,
            business);
        userProcessContainer.add("AddNewStadiumJPanel", ansjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddStadiumActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        BarAssignWorkJPanel aswj = (BarAssignWorkJPanel) component;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddStadium;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteStadium1;
    private javax.swing.JButton btnModifyStadium;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable stadiumJTable;
    // End of variables declaration//GEN-END:variables
}
